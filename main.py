import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

A=pd.read_csv('FZGA_NumerischeWerte.csv',sep=';')

xRA=np.array(A['Rolling angle'])
yRK=np.array(A['Reibkoeff_ges'])
yAB=np.array(A['Abplattungsbreite'])
yvG=np.array(A['v_Gleit'])
yvGPlot=abs(yvG)
yvw1=np.array(A['v_w1'])
yvw2=np.array(A['v_w2'])
yHP=np.array(A['Pressung'])
yFK=np.array(A['Kontaktkraft'])
yLSF=np.array(A['NumLSF'])
yLFT=np.array(A['limFlashtemp'])
yFT=np.array(A['Flashtemp'])



plt.figure(1,figsize=[160/25.4,90/25.4])
plt.plot(xRA,yvw1,'-',color='blue',label='Pinion tangential velocity')
plt.plot(xRA,yvw2,'-',color='red',label='wheel tangential velocity')
plt.plot(xRA,yvGPlot,'-',color='green',label='sliding velocity')
plt.xlabel('Rolling angle [°]', fontsize=6)
plt.ylabel('Velocities [m/s]', fontsize=6)
plt.grid(visible=True, which='major', color='k', linestyle='-', linewidth=0.5)
plt.grid(visible=True, which='minor', color='k', linestyle='-', linewidth=0.2)
plt.title("Velocities")
plt.xticks(fontsize=6)
plt.yticks(fontsize=6)
plt.legend()
plt.minorticks_on()
plt.savefig("NumericVelocities.eps")
plt.savefig("NumericVelocities.png",dpi=1000)
plt.show()

plt.figure(2,figsize=[160/25.4,90/25.4])
plt.plot(xRA,yLSF,'-',color='blue',label='Load sharing factor')
plt.xlabel('Rolling angle [°]', fontsize=6)
plt.ylabel('Load sharing factor [-]', fontsize=6)
plt.grid(visible=True, which='major', color='k', linestyle='-', linewidth=0.5)
plt.grid(visible=True, which='minor', color='k', linestyle='-', linewidth=0.2)
plt.title("FZG-A Load sharing factor")
plt.xticks(fontsize=6)
plt.yticks(fontsize=6)
plt.legend()
plt.minorticks_on()
plt.savefig("FZGALSF.eps")
plt.savefig("FZGALSF.png",dpi=1000)
plt.show()

plt.figure(3,figsize=[160/25.4,90/25.4])
plt.plot(xRA,yHP,'-',color='blue',label='Hertzian pressure')
plt.xlabel('Rolling angle [°]', fontsize=6)
plt.ylabel('Hertzian pressure [MPa]', fontsize=6)
plt.grid(visible=True, which='major', color='k', linestyle='-', linewidth=0.5)
plt.grid(visible=True, which='minor', color='k', linestyle='-', linewidth=0.2)
plt.title("Hertzian pressure")
plt.xticks(fontsize=6)
plt.yticks(fontsize=6)
plt.legend()
plt.minorticks_on()
plt.savefig("hertzian pressure.eps")
plt.savefig("hertzian pressure.png",dpi=1000)
plt.show()

plt.figure(4,figsize=[160/25.4,90/25.4])
plt.plot(xRA,yRK,'-',color='blue',label='Coefficient of friction')
plt.xlabel('Rolling angle [°]', fontsize=6)
plt.ylabel('Coefficient of friction [-]', fontsize=6)
plt.grid(visible=True, which='major', color='k', linestyle='-', linewidth=0.5)
plt.grid(visible=True, which='minor', color='k', linestyle='-', linewidth=0.2)
plt.title("Coefficient of friction")
plt.xticks(fontsize=6)
plt.yticks(fontsize=6)
plt.legend()
plt.minorticks_on()
plt.savefig("Coefficient of friction.eps")
plt.savefig("Coefficient of friction.png",dpi=1000)
plt.show()

plt.figure(5,figsize=[160/25.4,90/25.4])
plt.plot(xRA,yFT,'-',color='blue',label='flash temperature')
plt.plot(xRA,yLFT,'-',color='red',label='Limiting flash temperature')
plt.xlabel('Rolling angle [°]', fontsize=6)
plt.ylabel('Flash temperatures [K]', fontsize=6)
plt.grid(visible=True, which='major', color='k', linestyle='-', linewidth=0.5)
plt.grid(visible=True, which='minor', color='k', linestyle='-', linewidth=0.2)
plt.title("Flash temperature")
plt.xticks(fontsize=6)
plt.yticks(fontsize=6)
plt.legend()
plt.minorticks_on()
plt.savefig("flashtemp.eps")
plt.savefig("flashtemp.png",dpi=1000)
plt.show()